repository:
  # See https://developer.github.com/v3/repos/#edit for all available settings.

  # The name of the repository. Changing this will rename the repository
  #name: repo-name

  # A short description of the repository that will show up on GitHub
  #description: description of repo

  # A URL with more information about the repository
  #homepage: https://example.github.io/

  # A comma-separated list of topics to set on the repository
  #topics: project, template, project-template

  # Either `true` to make the repository private, or `false` to make it public.
  #private: false

  # Either `true` to enable issues for this repository, `false` to disable them.
  #has_issues: true

  # Either `true` to enable the wiki for this repository, `false` to disable it.
  has_wiki: false

  # Either `true` to enable downloads for this repository, `false` to disable them.
  #has_downloads: true

  # Updates the default branch for this repository.
  default_branch: main

  # Either `true` to allow squash-merging pull requests, or `false` to prevent
  # squash-merging.
  allow_squash_merge: true

  # Either `true` to allow merging pull requests with a merge commit, or `false`
  # to prevent merging pull requests with merge commits.
  allow_merge_commit: false

  # Either `true` to allow rebase-merging pull requests, or `false` to prevent
  # rebase-merging.
  allow_rebase_merge: false

# Labels: define labels for Issues and Pull Requests
labels:
  # --- Types ---
  - name: "Type: Bug"
    color: e80c0c
    description: Something isn't working as expected.

  - name: "Type: Enhancement"
    color: 54b2ff
    description: Suggest an improvement for an existing feature.

  - name: "Type: Feature"
    color: 2fbceb
    description: Suggest a new feature.

  - name: "Type: Security"
    color: fbff00
    description: A problem or enhancement related to a security issue.

  - name: "Type: Question"
    color: 9309ab
    description: Request for information.

  - name: "Type: Test"
    color: ce54e3
    description: Related to testing, CI, or coverage.

  - name: "Type: Documentation"
    color: 2fbceb
    description: An issue/change with the documentation.

  - name: "Type: Accessibility"
    color: f9a825
    description: Accessibility or usability concern.

  - name: "Type: Performance"
    color: 8e24aa
    description: A problem or improvement related to performance.

  - name: "Type: Integration"
    color: 3949ab
    description: Relating to 3rd party services, APIs, or plugins.

  # --- Status ---
  - name: "Status: WIP"
    color: 07b340
    description: Currently being worked on.

  - name: "Status: Awaiting Review"
    color: 24d15d
    description: Ready for review.

  - name: "Status: Waiting"
    color: 38c968
    description: Waiting on something else to be ready.

  - name: "Status: Blocked"
    color: d81b60
    description: Blocked by another issue or dependency.

  - name: "Status: Stale"
    color: 66b38a
    description: Has had no activity for some time.

  # --- Priority (renamed to avoid Linear conflicts) ---
  - name: "P0 – Critical"
    color: ff1744
    description: Must be addressed immediately, blocking release or production.

  - name: "P1 – High"
    color: ff4081
    description: High-priority, should be tackled soon.

  - name: "P2 – Medium"
    color: ffc107
    description: Normal-priority, important but not urgent.

  - name: "P3 – Low"
    color: 795548
    description: Low-priority, nice-to-have.

  # --- Scope ---
  - name: "Scope: Backend"
    color: e53935
    description: Related to backend or server-side work.

  - name: "Scope: Frontend"
    color: 43a047
    description: Related to frontend or client-side work.

  - name: "Scope: Database"
    color: 00897b
    description: Related to database, schema, or queries.

  - name: "Scope: DevOps"
    color: 1e88e5
    description: Related to CI/CD, infrastructure, or deployment.

  - name: "Scope: Design/UX"
    color: f06292
    description: Related to user experience or design work.

  # --- Meta / Ops ---
  - name: "dependencies"
    color: ffcc80
    description: Pull requests that update dependencies.

  - name: "Duplicate"
    color: eb862d
    description: Duplicate of another issue.

  - name: "Invalid"
    color: faef50
    description: This issue doesn't seem right.

  - name: "Won't fix"
    color: c8d9e6
    description: Reported issue is working as intended.

  - name: "Tech Debt"
    color: 546e7a
    description: Internal refactor, cleanup, or debt reduction.

  - name: "3rd Party Issue"
    color: e88707
    description: This issue might be caused by a 3rd party script/package.

  - name: "Migrated"
    color: 78909c
    description: Brought over from another repo or system.

  # --- OS Specific ---
  - name: "OS: Windows"
    color: aeb1c2
    description: Is Windows-specific.

  - name: "OS: Mac"
    color: aeb1c2
    description: Is macOS-specific.

  - name: "OS: Linux"
    color: aeb1c2
    description: Is Linux-specific.

# # Collaborators: give specific users access to this repository.
# # See https://developer.github.com/v3/repos/collaborators/#add-user-as-a-collaborator for available options
# collaborators:
#   # - username: bkeepers
#   #   permission: push
#   # - username: hubot
#   #   permission: pull

#   # Note: `permission` is only valid on organization-owned repositories.
#   # The permission to grant the collaborator. Can be one of:
#   # * `pull` - can pull, but not push to or administer this repository.
#   # * `push` - can pull and push, but not administer this repository.
#   # * `admin` - can pull, push and administer this repository.
#   # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
#   # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.

# # See https://developer.github.com/v3/teams/#add-or-update-team-repository for available options
# teams:
#   - name: core
#     # The permission to grant the team. Can be one of:
#     # * `pull` - can pull, but not push to or administer this repository.
#     # * `push` - can pull and push, but not administer this repository.
#     # * `admin` - can pull, push and administer this repository.
#     # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
#     # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
#     permission: admin
#   - name: docs
#     permission: push

branches:
  - name: main
    #     # https://developer.github.com/v3/repos/branches/#update-branch-protection
    #     # Branch Protection settings. Set to null to disable
    protection:
      #       # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
      required_pull_request_reviews:
        # The number of approvals required. (1-6)
        required_approving_review_count: 1
        #         # Dismiss approved reviews automatically when a new commit is pushed.
        dismiss_stale_reviews: true
        # Blocks merge until code owners have reviewed.
        require_code_owner_reviews: true
        #         # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal_restrictions object to disable. User and team dismissal_restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
        dismissal_restrictions:
          users: []
          teams: []
      #       # Required. Require status checks to pass before merging. Set to null to disable
      required_status_checks:
        # Required. Require branches to be up to date before merging.
        strict: true
        #         # Required. The list of status checks to require in order to merge into this branch
        contexts: []
      # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
      enforce_admins: true
      #       # Prevent merge commits from being pushed to matching branches
      required_linear_history: true
      # Required. Restrict who can push to this branch. Team and user restrictions are only available for organization-owned repositories. Set to null to disable.
      restrictions:
        apps: []
        users: []
        teams: []
